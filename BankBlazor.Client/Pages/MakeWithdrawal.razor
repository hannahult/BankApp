@page "/make-withdrawal"
@using BankBlazor.Client.ViewModels
@inject HttpClient HttpClient

<h2 class="text-center my-4">Make a new withdrawal</h2>

<div class="container" style="max-width: 600px;">
    <div class="card p-4 shadow-sm">
        <div class="mb-3">
            <label for="fromAccount" class="form-label">From Account ID</label>
            <input type="number" id="fromAccount" class="form-control" @bind="transactionCreateViewModel.AccountId" />
        </div>

        <div class="mb-3">
            <label for="amount" class="form-label">Amount</label>
            <input type="number" step="0.01" id="amount" class="form-control" @bind="transactionCreateViewModel.Amount" />
        </div>

        <button class="btn btn-success w-100" @onclick="MakeWithdrawalAsync">Make Withdrawal</button>

        @if (successMessage != null)
        {
            <div class="alert alert-success mt-3">@successMessage</div>
        }
        @if (errorMessage != null)
        {
            <div class="alert alert-danger mt-3">@errorMessage</div>
        }
    </div>
</div>

@code {
    private TransactionCreateViewModel transactionCreateViewModel = new();
    private string? successMessage;
    private string? errorMessage;

    private async Task MakeWithdrawalAsync()
    {
        try
        {
            var response = await HttpClient.PostAsJsonAsync("https://localhost:7127/api/transaction/withdraw", transactionCreateViewModel);

            if (response.IsSuccessStatusCode)
            {
                successMessage = "Withdrawal successful!";
                errorMessage = null;
                transactionCreateViewModel = new TransactionCreateViewModel();
            }
            else
            {
                var message = await response.Content.ReadAsStringAsync();
                successMessage = null;
                errorMessage = $"Withdrawal failed: {message}";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"An error occurred: {ex.Message}";
        }
    }
}
